public class MenuOptions{
PreparedStatement p;

public MenuOptions(){
//connection is part of Authentication object
}

public PreparedStatement createItem(){}

public PreparedStatement createLocation(){}

public PreparedStatement createProduct(){}

private PreparedStatement composeBracelet(){}

public PreparedStatement createOrder(){}

private PreparedStatement createCustomer(){}

public PreparedStatement createUser(){}

public PreparedStatement viewInventory(){}

public PreparedStatement viewItem(){}

public PreparedStatement editItem(){}

public PreparedStatement listProducts(){}

public PreparedStatement viewProduct(){}

public PreparedStatement editProduct(){}

public PreparedStatement viewCustomer(){}

public PreparedStatement editCustomer(){}

public PreparedStatement deleteLocation(){}

}
}

public class Authentication{
class DBConnection{
String db;
String uname;
String pwd;
Connection conn = DriverManager.getConnection(db,uname,pwd);

}

class Authentication{
String username;
String hashpwd;
String name;
Date date;

public Authentication(String un, String pw){
this.username = un;
this.hashpwd = hash(pw);

overview and intro - Mercedes
comparison and benefits - 
trade-offs and requirements - 
}

public bool authenticate(String un, String pw){
String sql = "select * from users where user = "+this.username;
String[] pwd = conn.query(sql);
bool val = this.hashpwd==pwd[0];
if (val){
Authorization auth = new Authorization(this.username);
}
return val}

class Authorization{
String[] tables;
String[] rights;
public Authorization(String user){
//code to populate tables array and rights array}
}
}
.....................................................

class Request{
String table;
int access;
}
}
.....................................................
.....................................................

class Payload{
int request; //i.e. edit - 1
int specific; //i.e. update qty - 4
string[] inputs;
bool status;
String[] response;
}



